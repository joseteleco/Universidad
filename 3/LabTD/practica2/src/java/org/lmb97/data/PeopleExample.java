package org.lmb97.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PeopleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public PeopleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSurnameIsNull() {
            addCriterion("surname is null");
            return (Criteria) this;
        }

        public Criteria andSurnameIsNotNull() {
            addCriterion("surname is not null");
            return (Criteria) this;
        }

        public Criteria andSurnameEqualTo(String value) {
            addCriterion("surname =", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameNotEqualTo(String value) {
            addCriterion("surname <>", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameGreaterThan(String value) {
            addCriterion("surname >", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameGreaterThanOrEqualTo(String value) {
            addCriterion("surname >=", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameLessThan(String value) {
            addCriterion("surname <", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameLessThanOrEqualTo(String value) {
            addCriterion("surname <=", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameLike(String value) {
            addCriterion("surname like", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameNotLike(String value) {
            addCriterion("surname not like", value, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameIn(List<String> values) {
            addCriterion("surname in", values, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameNotIn(List<String> values) {
            addCriterion("surname not in", values, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameBetween(String value1, String value2) {
            addCriterion("surname between", value1, value2, "surname");
            return (Criteria) this;
        }

        public Criteria andSurnameNotBetween(String value1, String value2) {
            addCriterion("surname not between", value1, value2, "surname");
            return (Criteria) this;
        }

        public Criteria andBirthIsNull() {
            addCriterion("birth is null");
            return (Criteria) this;
        }

        public Criteria andBirthIsNotNull() {
            addCriterion("birth is not null");
            return (Criteria) this;
        }

        public Criteria andBirthEqualTo(Date value) {
            addCriterionForJDBCDate("birth =", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthNotEqualTo(Date value) {
            addCriterionForJDBCDate("birth <>", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthGreaterThan(Date value) {
            addCriterionForJDBCDate("birth >", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("birth >=", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthLessThan(Date value) {
            addCriterionForJDBCDate("birth <", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("birth <=", value, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthIn(List<Date> values) {
            addCriterionForJDBCDate("birth in", values, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthNotIn(List<Date> values) {
            addCriterionForJDBCDate("birth not in", values, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("birth between", value1, value2, "birth");
            return (Criteria) this;
        }

        public Criteria andBirthNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("birth not between", value1, value2, "birth");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileIsNull() {
            addCriterion("phone_mobile is null");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileIsNotNull() {
            addCriterion("phone_mobile is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileEqualTo(Integer value) {
            addCriterion("phone_mobile =", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileNotEqualTo(Integer value) {
            addCriterion("phone_mobile <>", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileGreaterThan(Integer value) {
            addCriterion("phone_mobile >", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileGreaterThanOrEqualTo(Integer value) {
            addCriterion("phone_mobile >=", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileLessThan(Integer value) {
            addCriterion("phone_mobile <", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileLessThanOrEqualTo(Integer value) {
            addCriterion("phone_mobile <=", value, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileIn(List<Integer> values) {
            addCriterion("phone_mobile in", values, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileNotIn(List<Integer> values) {
            addCriterion("phone_mobile not in", values, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileBetween(Integer value1, Integer value2) {
            addCriterion("phone_mobile between", value1, value2, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andPhoneMobileNotBetween(Integer value1, Integer value2) {
            addCriterion("phone_mobile not between", value1, value2, "phoneMobile");
            return (Criteria) this;
        }

        public Criteria andDniNumberIsNull() {
            addCriterion("dni_number is null");
            return (Criteria) this;
        }

        public Criteria andDniNumberIsNotNull() {
            addCriterion("dni_number is not null");
            return (Criteria) this;
        }

        public Criteria andDniNumberEqualTo(Integer value) {
            addCriterion("dni_number =", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberNotEqualTo(Integer value) {
            addCriterion("dni_number <>", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberGreaterThan(Integer value) {
            addCriterion("dni_number >", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("dni_number >=", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberLessThan(Integer value) {
            addCriterion("dni_number <", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberLessThanOrEqualTo(Integer value) {
            addCriterion("dni_number <=", value, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberIn(List<Integer> values) {
            addCriterion("dni_number in", values, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberNotIn(List<Integer> values) {
            addCriterion("dni_number not in", values, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberBetween(Integer value1, Integer value2) {
            addCriterion("dni_number between", value1, value2, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("dni_number not between", value1, value2, "dniNumber");
            return (Criteria) this;
        }

        public Criteria andDniLetterIsNull() {
            addCriterion("dni_letter is null");
            return (Criteria) this;
        }

        public Criteria andDniLetterIsNotNull() {
            addCriterion("dni_letter is not null");
            return (Criteria) this;
        }

        public Criteria andDniLetterEqualTo(String value) {
            addCriterion("dni_letter =", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterNotEqualTo(String value) {
            addCriterion("dni_letter <>", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterGreaterThan(String value) {
            addCriterion("dni_letter >", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterGreaterThanOrEqualTo(String value) {
            addCriterion("dni_letter >=", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterLessThan(String value) {
            addCriterion("dni_letter <", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterLessThanOrEqualTo(String value) {
            addCriterion("dni_letter <=", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterLike(String value) {
            addCriterion("dni_letter like", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterNotLike(String value) {
            addCriterion("dni_letter not like", value, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterIn(List<String> values) {
            addCriterion("dni_letter in", values, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterNotIn(List<String> values) {
            addCriterion("dni_letter not in", values, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterBetween(String value1, String value2) {
            addCriterion("dni_letter between", value1, value2, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andDniLetterNotBetween(String value1, String value2) {
            addCriterion("dni_letter not between", value1, value2, "dniLetter");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseIsNull() {
            addCriterion("phone_house is null");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseIsNotNull() {
            addCriterion("phone_house is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseEqualTo(Integer value) {
            addCriterion("phone_house =", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseNotEqualTo(Integer value) {
            addCriterion("phone_house <>", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseGreaterThan(Integer value) {
            addCriterion("phone_house >", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseGreaterThanOrEqualTo(Integer value) {
            addCriterion("phone_house >=", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseLessThan(Integer value) {
            addCriterion("phone_house <", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseLessThanOrEqualTo(Integer value) {
            addCriterion("phone_house <=", value, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseIn(List<Integer> values) {
            addCriterion("phone_house in", values, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseNotIn(List<Integer> values) {
            addCriterion("phone_house not in", values, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseBetween(Integer value1, Integer value2) {
            addCriterion("phone_house between", value1, value2, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andPhoneHouseNotBetween(Integer value1, Integer value2) {
            addCriterion("phone_house not between", value1, value2, "phoneHouse");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andPostcodeIsNull() {
            addCriterion("postcode is null");
            return (Criteria) this;
        }

        public Criteria andPostcodeIsNotNull() {
            addCriterion("postcode is not null");
            return (Criteria) this;
        }

        public Criteria andPostcodeEqualTo(Integer value) {
            addCriterion("postcode =", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeNotEqualTo(Integer value) {
            addCriterion("postcode <>", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeGreaterThan(Integer value) {
            addCriterion("postcode >", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("postcode >=", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeLessThan(Integer value) {
            addCriterion("postcode <", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeLessThanOrEqualTo(Integer value) {
            addCriterion("postcode <=", value, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeIn(List<Integer> values) {
            addCriterion("postcode in", values, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeNotIn(List<Integer> values) {
            addCriterion("postcode not in", values, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeBetween(Integer value1, Integer value2) {
            addCriterion("postcode between", value1, value2, "postcode");
            return (Criteria) this;
        }

        public Criteria andPostcodeNotBetween(Integer value1, Integer value2) {
            addCriterion("postcode not between", value1, value2, "postcode");
            return (Criteria) this;
        }

        public Criteria andJoinRefIsNull() {
            addCriterion("join_ref is null");
            return (Criteria) this;
        }

        public Criteria andJoinRefIsNotNull() {
            addCriterion("join_ref is not null");
            return (Criteria) this;
        }

        public Criteria andJoinRefEqualTo(Integer value) {
            addCriterion("join_ref =", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefNotEqualTo(Integer value) {
            addCriterion("join_ref <>", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefGreaterThan(Integer value) {
            addCriterion("join_ref >", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefGreaterThanOrEqualTo(Integer value) {
            addCriterion("join_ref >=", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefLessThan(Integer value) {
            addCriterion("join_ref <", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefLessThanOrEqualTo(Integer value) {
            addCriterion("join_ref <=", value, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefIn(List<Integer> values) {
            addCriterion("join_ref in", values, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefNotIn(List<Integer> values) {
            addCriterion("join_ref not in", values, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefBetween(Integer value1, Integer value2) {
            addCriterion("join_ref between", value1, value2, "joinRef");
            return (Criteria) this;
        }

        public Criteria andJoinRefNotBetween(Integer value1, Integer value2) {
            addCriterion("join_ref not between", value1, value2, "joinRef");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andNickIsNull() {
            addCriterion("nick is null");
            return (Criteria) this;
        }

        public Criteria andNickIsNotNull() {
            addCriterion("nick is not null");
            return (Criteria) this;
        }

        public Criteria andNickEqualTo(String value) {
            addCriterion("nick =", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotEqualTo(String value) {
            addCriterion("nick <>", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickGreaterThan(String value) {
            addCriterion("nick >", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickGreaterThanOrEqualTo(String value) {
            addCriterion("nick >=", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLessThan(String value) {
            addCriterion("nick <", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLessThanOrEqualTo(String value) {
            addCriterion("nick <=", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLike(String value) {
            addCriterion("nick like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotLike(String value) {
            addCriterion("nick not like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickIn(List<String> values) {
            addCriterion("nick in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotIn(List<String> values) {
            addCriterion("nick not in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickBetween(String value1, String value2) {
            addCriterion("nick between", value1, value2, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotBetween(String value1, String value2) {
            addCriterion("nick not between", value1, value2, "nick");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table people
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 17 19:12:25 CEST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table people
     *
     * @mbggenerated Tue Apr 17 19:12:25 CEST 2012
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}